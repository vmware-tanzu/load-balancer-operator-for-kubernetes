name: Load Balancer Operator for Kubernetes Checks
on:
  pull_request:
    types: [opened, synchronize]

env:
  GO_VERSION: '1.23'

jobs:
  lint:
    name: lint-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: actions/setup-go@v5
        with:
          stable: 'true'
          go-version: ${{ env.GO_VERSION }}

      - name: Build hack tools for linting
        run: cd hack/tools && make golangci-lint

      - name: Install npm
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install markdown-lint tool
        run: npm install -g markdownlint-cli

      - name: Perform golang code linting
        run: make lint-go

      - name: Perform markdown linting
        run: make lint-markdown

      - name: Perform shell scripts linting with shellcheck
        run: make lint-shell

  unit-test:
    name: unit-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: actions/setup-go@v5
        with:
          stable: 'true'
          go-version: ${{ env.GO_VERSION }}
      - name: Build hack tools for unit testing
        run: cd hack/tools && make controller-gen etcd ginkgo kustomize

      - name: Perform unit tests and output coverage
        run: make cover

      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: cover.out
          verbose: true


  intg_test:
    name: integration-test
    runs-on: ubuntu-latest
    needs: [ lint ]
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: actions/setup-go@v5
        with:
          stable: 'true'
          go-version: ${{ env.GO_VERSION }}
      - name: Build hack tools for integration testing
        run: cd hack/tools && make controller-gen etcd ginkgo kustomize
      - name: Perform integration tests
        run: make integration-test

  docker_img:
    name: build-lb-operator-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: actions/setup-go@v5
        with:
          stable: 'true'
          go-version: ${{ env.GO_VERSION }}

      # uncomment this step for debugging: tmate session
#      - name: Setup tmate session
#        uses: mxschmitt/action-tmate@v3
      - name: Build Docker Image
        run: docker build . -t ako-operator:latest -f Dockerfile
